(function() {var implementors = {
"anvil":[["impl <a class=\"trait\" href=\"anvil/eth/backend/mem/in_memory_db/trait.DatabaseRef.html\" title=\"trait anvil::eth::backend::mem::in_memory_db::DatabaseRef\">DatabaseRef</a> for <a class=\"struct\" href=\"anvil/eth/backend/db/struct.StateDb.html\" title=\"struct anvil::eth::backend::db::StateDb\">StateDb</a>"],["impl&lt;'a&gt; <a class=\"trait\" href=\"anvil/eth/backend/mem/in_memory_db/trait.DatabaseRef.html\" title=\"trait anvil::eth::backend::mem::in_memory_db::DatabaseRef\">DatabaseRef</a> for <a class=\"struct\" href=\"anvil/eth/backend/genesis/struct.AtGenesisStateDb.html\" title=\"struct anvil::eth::backend::genesis::AtGenesisStateDb\">AtGenesisStateDb</a>&lt;'a&gt;"]],
"cast":[],
"forge":[],
"foundry_evm_core":[["impl DatabaseRef for <a class=\"struct\" href=\"foundry_evm_core/backend/in_memory_db/struct.EmptyDBWrapper.html\" title=\"struct foundry_evm_core::backend::in_memory_db::EmptyDBWrapper\">EmptyDBWrapper</a>"],["impl DatabaseRef for <a class=\"struct\" href=\"foundry_evm_core/backend/in_memory_db/struct.MemDb.html\" title=\"struct foundry_evm_core::backend::in_memory_db::MemDb\">MemDb</a>"],["impl DatabaseRef for <a class=\"struct\" href=\"foundry_evm_core/backend/struct.Backend.html\" title=\"struct foundry_evm_core::backend::Backend\">Backend</a>"],["impl DatabaseRef for <a class=\"struct\" href=\"foundry_evm_core/fork/backend/struct.SharedBackend.html\" title=\"struct foundry_evm_core::fork::backend::SharedBackend\">SharedBackend</a>"],["impl DatabaseRef for <a class=\"struct\" href=\"foundry_evm_core/fork/database/struct.ForkDbSnapshot.html\" title=\"struct foundry_evm_core::fork::database::ForkDbSnapshot\">ForkDbSnapshot</a>"],["impl DatabaseRef for <a class=\"struct\" href=\"foundry_evm_core/fork/database/struct.ForkedDatabase.html\" title=\"struct foundry_evm_core::fork::database::ForkedDatabase\">ForkedDatabase</a>"],["impl&lt;'a&gt; DatabaseRef for <a class=\"struct\" href=\"foundry_evm_core/backend/fuzz/struct.FuzzBackendWrapper.html\" title=\"struct foundry_evm_core::backend::fuzz::FuzzBackendWrapper\">FuzzBackendWrapper</a>&lt;'a&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()