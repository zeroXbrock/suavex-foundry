(function() {var type_impls = {
"foundry_evm_core":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BackendHandler%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#99-283\">source</a><a href=\"#impl-BackendHandler%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"struct\" href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html\" title=\"struct foundry_evm_core::fork::backend::BackendHandler\">BackendHandler</a>&lt;P&gt;<div class=\"where\">where\n    P: TempProvider + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#103-120\">source</a><h4 class=\"code-header\">fn <a href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html#tymethod.new\" class=\"fn\">new</a>(\n    provider: P,\n    db: <a class=\"struct\" href=\"foundry_evm_core/fork/cache/struct.BlockchainDb.html\" title=\"struct foundry_evm_core::fork::cache::BlockchainDb\">BlockchainDb</a>,\n    rx: Receiver&lt;<a class=\"enum\" href=\"foundry_evm_core/fork/backend/enum.BackendRequest.html\" title=\"enum foundry_evm_core::fork::backend::BackendRequest\">BackendRequest</a>&gt;,\n    block_id: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;BlockId&gt;\n) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_request\" class=\"method\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#128-168\">source</a><h4 class=\"code-header\">fn <a href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html#tymethod.on_request\" class=\"fn\">on_request</a>(&amp;mut self, req: <a class=\"enum\" href=\"foundry_evm_core/fork/backend/enum.BackendRequest.html\" title=\"enum foundry_evm_core::fork::backend::BackendRequest\">BackendRequest</a>)</h4></section></summary><div class=\"docblock\"><p>handle the request in queue in the future.</p>\n<p>We always check:</p>\n<ol>\n<li>if the requested value is already stored in the cache, then answer the sender</li>\n<li>otherwise, fetch it via the provider but check if a request for that value is already in\nprogress (e.g. another Sender just requested the same account)</li>\n</ol>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_account_storage\" class=\"method\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#171-189\">source</a><h4 class=\"code-header\">fn <a href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html#tymethod.request_account_storage\" class=\"fn\">request_account_storage</a>(\n    &amp;mut self,\n    address: Address,\n    idx: U256,\n    listener: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/sync/mpsc/struct.Sender.html\" title=\"struct std::sync::mpsc::Sender\">Sender</a>&lt;<a class=\"type\" href=\"foundry_evm_core/backend/error/type.DatabaseResult.html\" title=\"type foundry_evm_core::backend::error::DatabaseResult\">DatabaseResult</a>&lt;U256&gt;&gt;\n)</h4></section></summary><div class=\"docblock\"><p>process a request for account’s storage</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_account_req\" class=\"method\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#192-204\">source</a><h4 class=\"code-header\">fn <a href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html#tymethod.get_account_req\" class=\"fn\">get_account_req</a>(&amp;self, address: Address) -&gt; <a class=\"enum\" href=\"foundry_evm_core/fork/backend/enum.ProviderRequest.html\" title=\"enum foundry_evm_core::fork::backend::ProviderRequest\">ProviderRequest</a>&lt;<a class=\"struct\" href=\"https://docs.rs/eyre/0.6.12/eyre/struct.Report.html\" title=\"struct eyre::Report\">Report</a>&gt;</h4></section></summary><div class=\"docblock\"><p>returns the future that fetches the account data</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_account\" class=\"method\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#207-217\">source</a><h4 class=\"code-header\">fn <a href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html#tymethod.request_account\" class=\"fn\">request_account</a>(\n    &amp;mut self,\n    address: Address,\n    listener: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/sync/mpsc/struct.Sender.html\" title=\"struct std::sync::mpsc::Sender\">Sender</a>&lt;<a class=\"type\" href=\"foundry_evm_core/backend/error/type.DatabaseResult.html\" title=\"type foundry_evm_core::backend::error::DatabaseResult\">DatabaseResult</a>&lt;AccountInfo&gt;&gt;\n)</h4></section></summary><div class=\"docblock\"><p>process a request for an account</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_full_block\" class=\"method\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#220-229\">source</a><h4 class=\"code-header\">fn <a href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html#tymethod.request_full_block\" class=\"fn\">request_full_block</a>(\n    &amp;mut self,\n    number: BlockId,\n    sender: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/sync/mpsc/struct.Sender.html\" title=\"struct std::sync::mpsc::Sender\">Sender</a>&lt;<a class=\"type\" href=\"foundry_evm_core/backend/error/type.DatabaseResult.html\" title=\"type foundry_evm_core::backend::error::DatabaseResult\">DatabaseResult</a>&lt;Block&gt;&gt;\n)</h4></section></summary><div class=\"docblock\"><p>process a request for an entire block</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_transaction\" class=\"method\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#232-243\">source</a><h4 class=\"code-header\">fn <a href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html#tymethod.request_transaction\" class=\"fn\">request_transaction</a>(\n    &amp;mut self,\n    tx: B256,\n    sender: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/sync/mpsc/struct.Sender.html\" title=\"struct std::sync::mpsc::Sender\">Sender</a>&lt;<a class=\"type\" href=\"foundry_evm_core/backend/error/type.DatabaseResult.html\" title=\"type foundry_evm_core::backend::error::DatabaseResult\">DatabaseResult</a>&lt;Transaction&gt;&gt;\n)</h4></section></summary><div class=\"docblock\"><p>process a request for a transactions</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.request_hash\" class=\"method\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#246-282\">source</a><h4 class=\"code-header\">fn <a href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html#tymethod.request_hash\" class=\"fn\">request_hash</a>(&amp;mut self, number: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, listener: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/sync/mpsc/struct.Sender.html\" title=\"struct std::sync::mpsc::Sender\">Sender</a>&lt;<a class=\"type\" href=\"foundry_evm_core/backend/error/type.DatabaseResult.html\" title=\"type foundry_evm_core::backend::error::DatabaseResult\">DatabaseResult</a>&lt;B256&gt;&gt;)</h4></section></summary><div class=\"docblock\"><p>process a request for a block hash</p>\n</div></details></div></details>",0,"foundry_evm_core::fork::multi::Handler"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Future-for-BackendHandler%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#285-465\">source</a><a href=\"#impl-Future-for-BackendHandler%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"foundry_evm_core/fork/backend/struct.BackendHandler.html\" title=\"struct foundry_evm_core::fork::backend::BackendHandler\">BackendHandler</a>&lt;P&gt;<div class=\"where\">where\n    P: TempProvider + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The type of value produced on completion.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/foundry_evm_core/fork/backend.rs.html#291-464\">source</a><a href=\"#method.poll\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html#tymethod.poll\" class=\"fn\">poll</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut Self</a>&gt;, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html#associatedtype.Output\" title=\"type core::future::future::Future::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Attempt to resolve the future to a final value, registering\nthe current task for wakeup if the value is not yet available. <a href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html#tymethod.poll\">Read more</a></div></details></div></details>","Future","foundry_evm_core::fork::multi::Handler"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()